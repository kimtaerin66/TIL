{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rin\\\\TIL\\\\TIL\\\\TIL\\\\Clone_coding\\\\movie_master\\\\src\\\\components\\\\CreateToDo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from 'recoil';\nimport { toDoState } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateToDo() {\n  _s();\n\n  const setToDos = useSetRecoilState(toDoState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleVaild = _ref => {\n    let {\n      toDo\n    } = _ref;\n    setToDos(oldToDos => [{\n      text: toDo,\n      id: Date.now(),\n      category: \"TO_DO\"\n    }, ...oldToDos]); //함수를 넣으면, 리턴값이 state값이된다.\n\n    setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleVaild),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n        required: \"Please write a To Do\"\n      }),\n      placeholder: \"Write a to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateToDo, \"MfUXGgdj6dirl/k0NNRF+9+f/ww=\", false, function () {\n  return [useSetRecoilState, useForm];\n});\n\n_c = CreateToDo;\nexport default CreateToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateToDo\");","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/src/components/CreateToDo.tsx"],"names":["React","useForm","useSetRecoilState","toDoState","CreateToDo","setToDos","register","handleSubmit","setValue","handleVaild","toDo","oldToDos","text","id","Date","now","category","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAAQC,SAAR,QAAwB,SAAxB;;;AAQA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,iBAAiB,CAACC,SAAD,CAAlC;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCP,OAAO,EAApD;;AACA,QAAMQ,WAAW,GAAG,QAAqB;AAAA,QAApB;AAAEC,MAAAA;AAAF,KAAoB;AACvCL,IAAAA,QAAQ,CAAEM,QAAD,IAAc,CACrB;AAAEC,MAAAA,IAAI,EAAEF,IAAR;AAAcG,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAlB;AAA8BC,MAAAA,QAAQ,EAAE;AAAxC,KADqB,EAErB,GAAGL,QAFkB,CAAf,CAAR,CADuC,CAInC;;AACJH,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CALuC,CAKjB;AACvB,GAND;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACE,WAAD,CAA5B;AAAA,4BACE,sBACMH,QAAQ,CAAC,MAAD,EAAS;AACnBW,QAAAA,QAAQ,EAAE;AADS,OAAT,CADd;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArBQb,U;UACUF,iB,EAC4BD,O;;;KAFtCG,U;AAuBT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSetRecoilState } from 'recoil';\r\nimport {toDoState} from \"./atoms\";\r\n\r\n\r\ninterface IForm {\r\n  toDo:string;\r\n}\r\n \r\n\r\nfunction CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleVaild = ({ toDo }: IForm) => {\r\n    setToDos((oldToDos) => [\r\n      { text: toDo, id: Date.now(), category: \"TO_DO\" },\r\n      ...oldToDos,\r\n    ]); //함수를 넣으면, 리턴값이 state값이된다.\r\n    setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleVaild)}>\r\n      <input\r\n        {...register(\"toDo\", {\r\n          required: \"Please write a To Do\",\r\n        })}\r\n        placeholder=\"Write a to do\"\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;\r\n"]},"metadata":{},"sourceType":"module"}