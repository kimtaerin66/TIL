{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rin\\\\TIL\\\\TIL\\\\TIL\\\\Clone_coding\\\\movie_master\\\\src\\\\ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\"; // function ToDoList() {\n//     const [ toDo, setToDo ] = useState(\"\");\n//     const onChange = (event:React.FormEvent<HTMLInputElement>) => {\n//     const {\n//         currentTarget : { value },\n//     } = event;\n//     setToDo(value);\n//      };\n//      const onSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n//          event.preventDefault();\n//          console.log(toDo);\n//      };\n//   return (\n//     <div>\n//       <form onSubmit={onSubmit}>\n//         <input onChange={onChange} value={toDo} placeholder=\"Write a to do\" />\n//         <button>Add</button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  var _errors$email, _errors$lastname, _errors$username, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); //데이터가 유효하지않으면 useForm이 에러를 보여줌\n\n  const onVaild = data => {\n    console.log(data);\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      onSubmit: handleSubmit(onVaild),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: \"email is required\",\n          pattern: {\n            value: /^[A-Za-z0-9._%+-]+@naver.com$/,\n            message: \"only naver.com emails allowed\"\n          }\n        }),\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastname\", {\n          required: true\n        }),\n        placeholder: \"lastname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors === null || errors === void 0 ? void 0 : (_errors$lastname = errors.lastname) === null || _errors$lastname === void 0 ? void 0 : _errors$lastname.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstname\", {\n          required: true\n        }),\n        placeholder: \"firstname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n          required: true,\n          minLength: 10\n        }),\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n          required: true,\n          minLength: 5,\n          maxLength: 10\n        }),\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password1\", {\n          required: \"password is required\",\n          minLength: {\n            value: 5,\n            message: \"your password is too short.\"\n          }\n        }),\n        placeholder: \"password1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/src/ToDoList.tsx"],"names":["React","useForm","ToDoList","register","handleSubmit","formState","errors","onVaild","data","console","log","display","flexDirection","required","pattern","value","message","email","lastname","minLength","username","maxLength","password"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// function ToDoList() {\r\n//     const [ toDo, setToDo ] = useState(\"\");\r\n//     const onChange = (event:React.FormEvent<HTMLInputElement>) => {\r\n//     const {\r\n//         currentTarget : { value },\r\n//     } = event;\r\n//     setToDo(value);\r\n//      };\r\n//      const onSubmit = (event:React.FormEvent<HTMLFormElement>) => {\r\n//          event.preventDefault();\r\n//          console.log(toDo);\r\n//      };\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={onSubmit}>\r\n//         <input onChange={onChange} value={toDo} placeholder=\"Write a to do\" />\r\n//         <button>Add</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\nfunction ToDoList() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm(); //데이터가 유효하지않으면 useForm이 에러를 보여줌\r\n  const onVaild = (data: any) => {\r\n    console.log(data);\r\n  };\r\n  console.log(errors);\r\n  return (\r\n    <div>\r\n      <form\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        onSubmit={handleSubmit(onVaild)}\r\n      >\r\n        <input\r\n          {...register(\"email\", {\r\n            required: \"email is required\",\r\n            pattern: {\r\n              value: /^[A-Za-z0-9._%+-]+@naver.com$/,\r\n              message: \"only naver.com emails allowed\",\r\n            },\r\n          })}\r\n          placeholder=\"email\"\r\n        />\r\n        <span> {errors?.email?.message}</span>\r\n        <input\r\n          {...register(\"lastname\", { required: true })}\r\n          placeholder=\"lastname\"\r\n        />\r\n          <span> {errors?.lastname?.message}</span>\r\n        <input\r\n          {...register(\"firstname\", { required: true })}\r\n          placeholder=\"firstname\"\r\n        />\r\n        <input\r\n          {...register(\"username\", { required: true, minLength: 10 })}\r\n          placeholder=\"username\"\r\n        />\r\n          <span> {errors?.username?.message}</span>\r\n        <input\r\n          {...register(\"password\", {\r\n            required: true,\r\n            minLength: 5,\r\n            maxLength: 10,\r\n          })}\r\n          placeholder=\"password\"\r\n        />\r\n          <span> {errors?.password?.message}</span>\r\n        <input\r\n          {...register(\"password1\", {\r\n            required: \"password is required\",\r\n            minLength: {\r\n              value: 5,\r\n              message: \"your password is too short.\",\r\n            },\r\n          })}\r\n          placeholder=\"password1\"\r\n        />\r\n        <button>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}