{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils'; // HOOK\n\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && shouldThrowError(undefined, obsRef.current.options.useErrorBoundary, [currentResult.error])) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/node_modules/react-query/es/react/useMutation.js"],"names":["_extends","React","notifyManager","noop","parseMutationArgs","MutationObserver","useQueryClient","shouldThrowError","useMutation","arg1","arg2","arg3","mountedRef","useRef","_React$useState","useState","forceUpdate","options","queryClient","obsRef","current","setOptions","currentResult","getCurrentResult","useEffect","unsubscribe","subscribe","batchCalls","x","mutate","useCallback","variables","mutateOptions","catch","error","undefined","useErrorBoundary","mutateAsync"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,IAAT,EAAeC,iBAAf,QAAwC,eAAxC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,SAAjC,C,CAA4C;;AAE5C,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AAC5C,MAAIC,UAAU,GAAGX,KAAK,CAACY,MAAN,CAAa,KAAb,CAAjB;;AAEA,MAAIC,eAAe,GAAGb,KAAK,CAACc,QAAN,CAAe,CAAf,CAAtB;AAAA,MACIC,WAAW,GAAGF,eAAe,CAAC,CAAD,CADjC;;AAGA,MAAIG,OAAO,GAAGb,iBAAiB,CAACK,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAA/B;AACA,MAAIO,WAAW,GAAGZ,cAAc,EAAhC;AACA,MAAIa,MAAM,GAAGlB,KAAK,CAACY,MAAN,EAAb;;AAEA,MAAI,CAACM,MAAM,CAACC,OAAZ,EAAqB;AACnBD,IAAAA,MAAM,CAACC,OAAP,GAAiB,IAAIf,gBAAJ,CAAqBa,WAArB,EAAkCD,OAAlC,CAAjB;AACD,GAFD,MAEO;AACLE,IAAAA,MAAM,CAACC,OAAP,CAAeC,UAAf,CAA0BJ,OAA1B;AACD;;AAED,MAAIK,aAAa,GAAGH,MAAM,CAACC,OAAP,CAAeG,gBAAf,EAApB;AACAtB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,YAAY;AAC1BZ,IAAAA,UAAU,CAACQ,OAAX,GAAqB,IAArB;AACA,QAAIK,WAAW,GAAGN,MAAM,CAACC,OAAP,CAAeM,SAAf,CAAyBxB,aAAa,CAACyB,UAAd,CAAyB,YAAY;AAC9E,UAAIf,UAAU,CAACQ,OAAf,EAAwB;AACtBJ,QAAAA,WAAW,CAAC,UAAUY,CAAV,EAAa;AACvB,iBAAOA,CAAC,GAAG,CAAX;AACD,SAFU,CAAX;AAGD;AACF,KAN0C,CAAzB,CAAlB;AAOA,WAAO,YAAY;AACjBhB,MAAAA,UAAU,CAACQ,OAAX,GAAqB,KAArB;AACAK,MAAAA,WAAW;AACZ,KAHD;AAID,GAbD,EAaG,EAbH;AAcA,MAAII,MAAM,GAAG5B,KAAK,CAAC6B,WAAN,CAAkB,UAAUC,SAAV,EAAqBC,aAArB,EAAoC;AACjEb,IAAAA,MAAM,CAACC,OAAP,CAAeS,MAAf,CAAsBE,SAAtB,EAAiCC,aAAjC,EAAgDC,KAAhD,CAAsD9B,IAAtD;AACD,GAFY,EAEV,EAFU,CAAb;;AAIA,MAAImB,aAAa,CAACY,KAAd,IAAuB3B,gBAAgB,CAAC4B,SAAD,EAAYhB,MAAM,CAACC,OAAP,CAAeH,OAAf,CAAuBmB,gBAAnC,EAAqD,CAACd,aAAa,CAACY,KAAf,CAArD,CAA3C,EAAwH;AACtH,UAAMZ,aAAa,CAACY,KAApB;AACD;;AAED,SAAOlC,QAAQ,CAAC,EAAD,EAAKsB,aAAL,EAAoB;AACjCO,IAAAA,MAAM,EAAEA,MADyB;AAEjCQ,IAAAA,WAAW,EAAEf,aAAa,CAACO;AAFM,GAApB,CAAf;AAID","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { noop, parseMutationArgs } from '../core/utils';\r\nimport { MutationObserver } from '../core/mutationObserver';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nimport { shouldThrowError } from './utils'; // HOOK\r\n\r\nexport function useMutation(arg1, arg2, arg3) {\r\n  var mountedRef = React.useRef(false);\r\n\r\n  var _React$useState = React.useState(0),\r\n      forceUpdate = _React$useState[1];\r\n\r\n  var options = parseMutationArgs(arg1, arg2, arg3);\r\n  var queryClient = useQueryClient();\r\n  var obsRef = React.useRef();\r\n\r\n  if (!obsRef.current) {\r\n    obsRef.current = new MutationObserver(queryClient, options);\r\n  } else {\r\n    obsRef.current.setOptions(options);\r\n  }\r\n\r\n  var currentResult = obsRef.current.getCurrentResult();\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        forceUpdate(function (x) {\r\n          return x + 1;\r\n        });\r\n      }\r\n    }));\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n  var mutate = React.useCallback(function (variables, mutateOptions) {\r\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\r\n  }, []);\r\n\r\n  if (currentResult.error && shouldThrowError(undefined, obsRef.current.options.useErrorBoundary, [currentResult.error])) {\r\n    throw currentResult.error;\r\n  }\r\n\r\n  return _extends({}, currentResult, {\r\n    mutate: mutate,\r\n    mutateAsync: currentResult.mutate\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}