{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rin\\\\TIL\\\\TIL\\\\TIL\\\\Clone_coding\\\\movie_master\\\\src\\\\components\\\\ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDoState = atom({\n  key: \"toDo\",\n  //key\n  default: [] //기본값\n\n});\n\nfunction ToDoList() {\n  _s();\n\n  const value = useRocoilValue();\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleVaild = data => {\n    console.log('add to do', data.toDo);\n    setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleVaild),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n          required: \"Please write a To Do\"\n        }),\n        placeholder: \"Write a to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"M9wMNSt76hNJPYvQvG157arWUbo=\", true, function () {\n  return [useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/src/components/ToDoList.tsx"],"names":["React","useForm","toDoState","atom","key","default","ToDoList","value","useRocoilValue","register","handleSubmit","setValue","handleVaild","data","console","log","toDo","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,SAAS,GAAGC,IAAI,CAAC;AACpBC,EAAAA,GAAG,EAAC,MADgB;AACR;AACZC,EAAAA,OAAO,EAAE,EAFW,CAEP;;AAFO,CAAD,CAAtB;;AASA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,KAAK,GAAGC,cAAc,EAA5B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCV,OAAO,EAApD;;AACA,QAAMW,WAAW,GAAIC,IAAD,IAAgB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAACG,IAA9B;AACAL,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CAFgC,CAEV;AACzB,GAHD;;AAIF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACE,WAAD,CAA5B;AAAA,8BACE,sBAAWH,QAAQ,CAAC,MAAD,EAAQ;AACvBQ,UAAAA,QAAQ,EAAC;AADc,SAAR,CAAnB;AAGA,QAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArBQX,Q;UAEwCL,O;;;KAFxCK,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst toDoState = atom({\r\n   key:\"toDo\", //key\r\n   default: [], //기본값\r\n})\r\n\r\ninterface IForm {\r\n    toDo:string;\r\n}\r\n\r\nfunction ToDoList() {\r\n    const value = useRocoilValue();\r\n    const { register, handleSubmit, setValue } = useForm<IForm>();\r\n    const handleVaild = (data:IForm) => {\r\n        console.log('add to do', data.toDo);\r\n        setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\r\n    }\r\n  return (\r\n    <div>\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <form onSubmit={handleSubmit(handleVaild)}>\r\n        <input {...register(\"toDo\",{\r\n            required:\"Please write a To Do\",\r\n        })} \r\n        placeholder=\"Write a to do\" />\r\n        <button>Add</button>\r\n      </form>\r\n      <ul></ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}