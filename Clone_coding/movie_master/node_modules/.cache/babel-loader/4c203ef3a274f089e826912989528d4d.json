{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rin\\\\TIL\\\\TIL\\\\TIL\\\\Clone_coding\\\\movie_master\\\\src\\\\components\\\\ToDoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { atom, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDoState = atom({\n  key: \"toDo\",\n  //key\n  default: [] //기본값\n\n});\n\nfunction ToDoList() {\n  _s();\n\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const value = useRecoilValue(toDoState);\n  const modFn = useSetRecoilState(toDoState);\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const handleVaild = _ref => {\n    let {\n      toDo\n    } = _ref;\n    setToDos(oldToDos => [{\n      text: toDo,\n      category: \"\"\n    }, ...oldToDos]); //함수를 넣으면, 리턴값이 state값이된다.\n\n    setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\n  };\n\n  console.log(toDos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Dos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleVaild),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"toDo\", {\n          required: \"Please write a To Do\"\n        }),\n        placeholder: \"Write a to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"vJ9bypelsV7e2hWTSnjzIveWT6U=\", false, function () {\n  return [useRecoilState, useRecoilValue, useSetRecoilState, useForm];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/src/components/ToDoList.tsx"],"names":["React","useForm","atom","useRecoilState","useRecoilValue","useSetRecoilState","toDoState","key","default","ToDoList","toDos","setToDos","value","modFn","register","handleSubmit","setValue","handleVaild","toDo","oldToDos","text","category","console","log","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAqBC,IAArB,EAAqCC,cAArC,EAAqDC,cAArD,EAAqEC,iBAArE,QAA6F,QAA7F;;AAOA,MAAMC,SAAS,GAAGJ,IAAI,CAAU;AAC7BK,EAAAA,GAAG,EAAC,MADyB;AACjB;AACZC,EAAAA,OAAO,EAAE,EAFoB,CAEhB;;AAFgB,CAAV,CAAtB;;AASA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBR,cAAc,CAACG,SAAD,CAA1C;AACA,QAAMM,KAAK,GAAGR,cAAc,CAACE,SAAD,CAA5B;AACA,QAAMO,KAAK,GAAGR,iBAAiB,CAACC,SAAD,CAA/B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCf,OAAO,EAApD;;AACA,QAAMgB,WAAW,GAAG,QAAkB;AAAA,QAAjB;AAACC,MAAAA;AAAD,KAAiB;AAClCP,IAAAA,QAAQ,CAAEQ,QAAD,IAAc,CAAC;AAACC,MAAAA,IAAI,EAAGF,IAAR;AAAcG,MAAAA,QAAQ,EAAC;AAAvB,KAAD,EAA4B,GAAGF,QAA/B,CAAf,CAAR,CADkC,CAC+B;;AACjEH,IAAAA,QAAQ,CAAC,MAAD,EAAS,EAAT,CAAR,CAFkC,CAEZ;AACzB,GAHD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEK,YAAY,CAACE,WAAD,CAA5B;AAAA,8BACE,sBAAWH,QAAQ,CAAC,MAAD,EAAQ;AACvBU,UAAAA,QAAQ,EAAC;AADc,SAAR,CAAnB;AAGA,QAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAxBQf,Q;UACuBN,c,EACdC,c,EACAC,iB,EAC+BJ,O;;;KAJxCQ,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState} from 'recoil';\r\n\r\ninterface IToDo {\r\n  text : string;\r\n  category: \"TO_DO\" | \"DOING\" | \"DONE\"; \r\n}\r\n\r\nconst toDoState = atom<IToDo[]>({\r\n   key:\"toDo\", //key\r\n   default: [], //기본값\r\n})\r\n\r\ninterface IForm {\r\n    toDo:string;\r\n}\r\n\r\nfunction ToDoList() {\r\n    const [ toDos, setToDos ] = useRecoilState(toDoState)\r\n    const value = useRecoilValue(toDoState);\r\n    const modFn = useSetRecoilState(toDoState);\r\n    const { register, handleSubmit, setValue } = useForm<IForm>();\r\n    const handleVaild = ({toDo}:IForm) => {\r\n        setToDos((oldToDos) => [{text : toDo, category:\"\"},...oldToDos]) //함수를 넣으면, 리턴값이 state값이된다.\r\n        setValue(\"toDo\", \"\"); //data가 유효하다면 출력 후 비우기\r\n    };\r\n    console.log(toDos);\r\n  return (\r\n    <div>\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <form onSubmit={handleSubmit(handleVaild)}>\r\n        <input {...register(\"toDo\",{\r\n            required:\"Please write a To Do\",\r\n        })} \r\n        placeholder=\"Write a to do\" />\r\n        <button>Add</button>\r\n      </form>\r\n      <ul></ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ToDoList;\r\n"]},"metadata":{},"sourceType":"module"}