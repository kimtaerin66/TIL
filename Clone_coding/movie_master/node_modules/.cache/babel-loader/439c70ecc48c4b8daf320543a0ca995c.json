{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rin\\\\TIL\\\\TIL\\\\TIL\\\\Clone_coding\\\\movie_master\\\\src\\\\ToDoList copy.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction INPUTS() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setError\n  } = useForm({\n    defaultValues: {\n      email: \"@naver.com\"\n    }\n  }); //데이터가 유효하지않으면 useForm이 에러를 보여줌\n  // const onVaild = (data: IForm) => {\n  //   if (data.password !== data.password1) {\n  //     //같지않으면\n  //     setError(\n  //       \"password1\",\n  //       { message: \"Password are not the same\" },\n  //       { shouldFocus: true }\n  //     ); //메세지보내기\n  //   }\n  //   setError(\"extraError\", { message: \"Server offline.\" });\n  // };\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"firstname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"lastname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        placeholder: \"password1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(INPUTS, \"XaHzoUoJ4Xl9HapszauQFDUVF3g=\", false, function () {\n  return [useForm];\n});\n\n_c = INPUTS;\nexport default INPUTS;\n\nvar _c;\n\n$RefreshReg$(_c, \"INPUTS\");","map":{"version":3,"sources":["C:/Users/rin/TIL/TIL/TIL/Clone_coding/movie_master/src/ToDoList copy.tsx"],"names":["React","useForm","INPUTS","register","handleSubmit","formState","errors","setError","defaultValues","email","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAYA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAHP;AAIJC,IAAAA;AAJI,MAKFN,OAAO,CAAQ;AACjBO,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE;AADM;AADE,GAAR,CALX,CADgB,CAUZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApCQJ,M;UAMHD,O;;;KANGC,M;AAsCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ninterface IForm {\r\n  email: string;\r\n  lastname: string;\r\n  firstname: string;\r\n  username: string;\r\n  password: string;\r\n  password1: string;\r\n  extraError?: string;\r\n}\r\n\r\nfunction INPUTS() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setError,\r\n  } = useForm<IForm>({\r\n    defaultValues: {\r\n      email: \"@naver.com\",\r\n    },\r\n  }); //데이터가 유효하지않으면 useForm이 에러를 보여줌\r\n  // const onVaild = (data: IForm) => {\r\n  //   if (data.password !== data.password1) {\r\n  //     //같지않으면\r\n  //     setError(\r\n  //       \"password1\",\r\n  //       { message: \"Password are not the same\" },\r\n  //       { shouldFocus: true }\r\n  //     ); //메세지보내기\r\n  //   }\r\n  //   setError(\"extraError\", { message: \"Server offline.\" });\r\n  // };\r\n  console.log(errors);\r\n  return (\r\n    <div>\r\n      <form >\r\n        <input required placeholder=\"email\" />\r\n        <input required placeholder=\"firstname\"/>\r\n        <input required placeholder=\"lastname\"/>\r\n        <input required placeholder=\"username\"/>\r\n        <input required placeholder=\"password\"/>\r\n        <input required placeholder=\"password1\"/>\r\n        <button>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default INPUTS;\r\n"]},"metadata":{},"sourceType":"module"}